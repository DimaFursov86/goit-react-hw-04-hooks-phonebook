{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","components/Section/Section.module.scss","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Section","children","className","s","section","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","formContact","e","preventDefault","contactFormItem","type","onChange","pattern","title","required","formButton","ContactItem","id","onDeleteContact","contactItem","contactItemText","onClick","ContactList","contacts","contactList","map","Filter","filterBox","Phonebook","contactsObj","setContacts","filter","setFilter","useEffect","window","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","box","shortid","generate","obj","alert","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99d2bbe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__17-UQ\",\"contactFormItem\":\"ContactForm_contactFormItem__3Uxgx\",\"formButton\":\"ContactForm_formButton__2XqgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__37acu\",\"contactItemText\":\"ContactItem_contactItemText__3hCzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3iCzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__XqmMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__2P1yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__3TEmg\"};","import s from \"../Section/Section.module.scss\";\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.scss\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.formContact} onSubmit={handleSubmit}>\n      <label className={s.contactFormItem}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <br />\n      <label className={s.contactFormItem}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import s from \"./ContactItem.module.scss\";\nimport PropTypes from \"prop-types\";\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\n  return (\n    <div className={s.contactItem}>\n      <p className={s.contactItemText}>{name}</p>\n      <p className={s.contactItemText}>{number}</p>\n      <button\n        type=\"button\"\n        className={s.contactItemText}\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import s from \"./ContactList.module.scss\";\nimport ContactItem from \"../ContactItem\";\nimport PropTypes from \"prop-types\";\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <ContactItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport s from \"./Filter.module.scss\";\nimport PropTypes from \"prop-types\";\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterBox}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nexport default Filter;\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport Section from \"./components/Section\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport contactsObj from \"./contacts.json\";\nimport s from \"./App.module.scss\";\n\nexport default function Phonebook() {\n  const [contacts, setContacts] = useState(contactsObj);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = window.localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const nameArr = getVisibleContacts();\n    const existName = nameArr.map((obj) => obj.name);\n    if (existName.includes(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts([...contacts, contact]);\n    }\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  return (\n    <Section>\n      <div className={s.box}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    </Section>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}